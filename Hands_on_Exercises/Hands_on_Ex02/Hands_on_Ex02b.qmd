---
title: "Hands on Exercise 2b- Second Order Spatial Point Patterns Analysis Methods"
author: "Deepika Raja"
date: "September 5, 2025"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

# **2b** 2nd Order Spatial Point Patterns Analysis Methods

### Built By Deepika Raja

## **1. Getting Started**

## **1.a. Learning Outcome**

Second-order spatial point pattern analysis examines the spatial relationships between points in a pattern, specifically focusing on how the presence of one point influences the location of others. It goes beyond simply describing the overall density of points (first-order effects) by investigating clustering, dispersion, or randomness at various spatial scales.

### **2. Data**

-   Child Care Services data from data.gov.sg, a point feature data providing both location and attribute information of childcare centres.

-   Master Plan 2019 Subzone Boundary (No Sea), a polygon feature data providing information of URA 2019 Master Plan Planning Subzone boundary data.

### **3. Installing and Loading the R packages**

```{r}
pacman::p_load(sf, terra, spatstat, 
               tmap, rvest, tidyverse)
```

### **4. Data Import and Prepration**

```{r}
mpsz_sf <- st_read("data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml") %>% 
  st_zm(drop = TRUE, what = "ZM") %>% st_transform(crs = 3414)
```

```{r}
extract_kml_field <- function(html_text, field_name) {
  if (is.na(html_text) || html_text == "") return(NA_character_)
  page <- read_html(html_text)
  rows <- page %>% html_elements("tr")
  value <- rows %>%
    keep(~ html_text2(html_element(.x, "th")) == field_name) %>%
    html_element("td") %>%
    html_text2()
  if (length(value) == 0) NA_character_ else value
}
```

```{r}
mpsz_sf <- mpsz_sf %>%
  mutate(
    REGION_N = map_chr(Description, extract_kml_field, "REGION_N"),
    PLN_AREA_N = map_chr(Description, extract_kml_field, "PLN_AREA_N"),
    SUBZONE_N = map_chr(Description, extract_kml_field, "SUBZONE_N"),
    SUBZONE_C = map_chr(Description, extract_kml_field, "SUBZONE_C")
  ) %>%
  select(-Name, -Description) %>%
  relocate(geometry, .after = last_col())
```

```{r}
mpsz_cl <- mpsz_sf %>%
  filter(SUBZONE_N != "SOUTHERN GROUP",
         PLN_AREA_N != "WESTERN ISLANDS",
         PLN_AREA_N != "NORTH-EASTERN ISLANDS")
```

```{r}
write_rds(mpsz_cl, "data/mpsz_cl.rds")
```

```{r}
childcare_sf <- st_read("data/ChildCareServices.kml") %>% 
  st_zm(drop = TRUE, what = "ZM") %>%
  st_transform(crs = 3414)
```

```{r}
st_crs(mpsz_cl) == st_crs(childcare_sf)
```

```{r}
library(sf)
library(ggplot2)
library(readr)

# Load cleaned subzone and childcare datasets
mpsz_cl <- read_rds("data/mpsz_cl.rds")
childcare_sf <- st_read("data/ChildCareServices.kml") %>%
  st_zm(drop = TRUE, what = "ZM") %>%
  st_transform(crs = st_crs(mpsz_cl))  # Ensure same CRS
```

```{r}
# Create the map
ggplot() +
  geom_sf(data = mpsz_cl, fill = "gray", color = "black", size = 0.2) +
  geom_sf(data = childcare_sf, color = "black", size = 1.2, alpha = 0.7) +
  labs(title = "Childcare Services Across Singapore Subzones",
       subtitle = "All layers aligned to EPSG:3414 (SVY21)",
       caption = "Source: URA Master Plan & Data.gov.sg") +
  theme_minimal()
```

## 5. Interactive mapping with tmap()

```{r}
tmap_mode("view")
```

```{r}
tm_shape(childcare_sf) +
  tm_dots()
```

## 6. Switching back to plot

```{r}
tmap_mode("plot")
```

```{r}
childcare_ppp <- as.ppp(childcare_sf)
```

```{r}
class(childcare_ppp)
```

```{r}
summary(childcare_ppp)
```

```{r}
sg_owin <- as.owin(mpsz_cl)
```

```{r}
class(sg_owin)
```

```{r}
plot(sg_owin)
```

## 7. Let's extract the childcare events that are located within Singapore:

```{r}
childcareSG_ppp = childcare_ppp[sg_owin]
```

```{r}
childcareSG_ppp
```

```{r}
pg <- mpsz_cl %>%
  filter(PLN_AREA_N == "PUNGGOL")
tm <- mpsz_cl %>%
  filter(PLN_AREA_N == "TAMPINES")
ck <- mpsz_cl %>%
  filter(PLN_AREA_N == "CHOA CHU KANG")
jw <- mpsz_cl %>%
  filter(PLN_AREA_N == "JURONG WEST")
```

```{r}
par(mfrow=c(2,2))
plot(st_geometry(pg), main = "Ponggol")
plot(st_geometry(tm), main = "Tampines")
plot(st_geometry(ck), main = "Choa Chu Kang")
plot(st_geometry(jw), main = "Jurong West")
```

```{r}
pg_owin = as.owin(pg)
tm_owin = as.owin(tm)
ck_owin = as.owin(ck)
jw_owin = as.owin(jw)
```

```{r}
childcare_pg_ppp = childcare_ppp[pg_owin]
childcare_tm_ppp = childcare_ppp[tm_owin]
childcare_ck_ppp = childcare_ppp[ck_owin]
childcare_jw_ppp = childcare_ppp[jw_owin]
```

```{r}
childcare_pg_ppp.km = rescale.ppp(childcare_pg_ppp, 1000, "km")
childcare_tm_ppp.km = rescale.ppp(childcare_tm_ppp, 1000, "km")
childcare_ck_ppp.km = rescale.ppp(childcare_ck_ppp, 1000, "km")
childcare_jw_ppp.km = rescale.ppp(childcare_jw_ppp, 1000, "km")
```

```{r}
par(mfrow=c(2,2))
plot(unmark(childcare_pg_ppp.km), 
  main="Punggol")
plot(unmark(childcare_tm_ppp.km), 
  main="Tampines")
plot(unmark(childcare_ck_ppp.km), 
  main="Choa Chu Kang")
plot(unmark(childcare_jw_ppp.km), 
  main="Jurong West")
```

## **8. Analysing Spatial Point Process Using G-Function**

The G function measures the distribution of the distances from an arbitrary event to its nearest event. In this section, you will learn how to compute G-function estimation by using Gest() of spatstat package. You will also learn how to perform monta carlo simulation test using envelope() of spatstat package

### **8.a Choa Chu Kang planning area**

Computing G-function estimation:

```{r}
set.seed(1234)
```

Compute G-function using Gest() of spatat package:

```{r}
G_CK = Gest(childcare_ck_ppp, correction = "border")
plot(G_CK, xlim=c(0,500))
```

### 8.b. Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a **hypothesis test** will be conducted. The hypothesis and test are as follows:

**Ho** = The distribution of childcare services at Choa Chu Kang are randomly distributed.

**H1** = The distribution of childcare services at Choa Chu Kang are not randomly distributed.

The null hypothesis will be *rejected* if *p-value is smaller* than *alpha value of 0.001.*

**Monte Carlo test with G-fucntion:**

```{r}
G_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)
```

```{r}
plot(G_CK.csr)
```

### **8.c Tampines planning area**

Computing G-function estimation:

```{r}
G_tm = Gest(childcare_tm_ppp, correction = "best")
plot(G_tm)
```

### **8.d Complete Spatial Randomness (CSR) Test**

To verify the spatial pattern of childcare services in Tampines, a **hypothesis test** is carried out:

-   **Null Hypothesis (H₀):** Childcare services in Tampines are **randomly distributed**.

-   **Alternative Hypothesis (H₁):** Childcare services in Tampines are **not randomly distributed**.

The **null hypothesis will be rejected** if the **p-value \< 0.001** (significance level).

The following **code chunk** executes this hypothesis test:\

```{r}
G_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = "all", nsim = 999)
```

```{r}
plot(G_tm.csr)
```

### **9. Analyzing Spatial Point Patterns with the F-Function**

The **F-function** (or **empty space function**, F(r)) estimates the likelihood that a randomly chosen location is within distance *r* of the nearest point in a spatial pattern. It can also be interpreted through its **hazard rate** h(r).

This analysis uses the `Fest()` function from the **spatstat** package to estimate F(r), and `envelope()` for conducting a **Monte Carlo simulation test** to assess spatial randomness.

#### **9.a. Choa Chu Kang Planning Area**

To compute the F-function for Choa Chu Kang, the following code uses `Fest()` from the **spatstat** package.

```{r}
F_CK = Fest(childcare_ck_ppp)
plot(F_CK)
```

**9.b. Testing for Complete Spatial Randomness**\
To validate the observed spatial patterns, a **hypothesis test** is carried out. The hypotheses are defined as:

-   **H₀**: *Childcare services in Choa Chu Kang are randomly distributed.*

-   **H₁**: *Childcare services in Choa Chu Kang are not randomly distributed.*

    The **null hypothesis (H₀)** will be **rejected** if the **p-value \< α (0.001)**.

The test is performed using the **Monte Carlo method** with the **F-function**:\

```{r}
F_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)
```

```{r}
plot(F_CK.csr)
```

### **9.c. Tampines planning area**

Computing F-function estimation Monte Carlo test with F-fucntion:

```{r}
F_tm = Fest(childcare_tm_ppp, correction = "best")
plot(F_tm)
```

### **9.d. Performing Complete Spatial Randomness Test**

To confirm the observed spatial patterns, a **hypothesis test** is conducted. The hypotheses are stated as follows:

-   **H₀**: *Childcare services in Tampines are randomly distributed.*

-   **H₁**: *Childcare services in Tampines are not randomly distributed.*

The **null hypothesis (H₀)** will be **rejected** if the **p-value \< α (0.001)**.

The **code chunk below** is used to perform the **hypothesis testing**.

```{r}
F_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = "all", nsim = 999)
```

```{r}
plot(F_tm.csr)
```

## 10. **Analysing Spatial Point Process Using K-Function**

The **K-function** measures the **number of events** found within a specified distance from any given event.

### **10.a Choa Chu Kang Planning Area**

*Computing K-function estimate*

```{r}
K_ck = Kest(childcare_ck_ppp, correction = "Ripley")
plot(K_ck, . -r ~ r, ylab= "K(d)-r", xlab = "d(m)")
```

### 10.b. Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns, a **hypothesis test** is conducted. The hypotheses are defined as follows:

-   **H₀**: *Childcare services in Choa Chu Kang are randomly distributed.*

-   **H₁**: *Childcare services in Choa Chu Kang are not randomly distributed.*

The **null hypothesis (H₀)** will be **rejected** if the **p-value \< α (0.001)**.

The **code chunk below** is used to perform the **hypothesis testing**:

```{r}
K_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_ck.csr, . - r ~ r, xlab="d", ylab="K(d)-r")
```

### **10.c. Tampines planning area**

Computing K-fucntion estimation:

```{r}
K_tm = Kest(childcare_tm_ppp, correction = "Ripley")
plot(K_tm, . -r ~ r, 
     ylab= "K(d)-r", xlab = "d(m)", 
     xlim=c(0,1000))
```

**Performing Complete Spatial Randomness Test**\
To confirm the observed spatial patterns, a **hypothesis test** is conducted. The hypotheses are defined as follows:

-   **H₀**: *Childcare services in Tampines are randomly distributed.*

-   **H₁**: *Childcare services in Tampines are not randomly distributed.*

The **null hypothesis (H₀)** will be **rejected** if the **p-value \< α (0.001)**.

The **code chunk below** is used to perform the **hypothesis testing**:

```{r}
K_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_tm.csr, . - r ~ r, 
     xlab="d", ylab="K(d)-r", xlim=c(0,500))
```

## **11. Analysing Spatial Point Process Using L-Function**

The **L-function** is an alternative transformation of the **K-function**, making it easier to interpret spatial clustering or dispersion.

### **11.a. Choa Chu Kang Planning Area**

*Computing L-function estimation:*

```{r}
L_ck = Lest(childcare_ck_ppp, correction = "Ripley")
plot(L_ck, . -r ~ r, 
     ylab= "L(d)-r", xlab = "d(m)")
```

### **11.b. Performing Complete Spatial Randomness Test**

To confirm the observed spatial patterns, a **hypothesis test** is conducted. The hypotheses are stated as follows:

-   **H₀**: *Childcare services in Choa Chu Kang are randomly distributed.*

-   **H₁**: *Childcare services in Choa Chu Kang are not randomly distributed.*

The **null hypothesis (H₀)** will be **rejected** if the **p-value \< α (0.001)**.

The **code chunk below** is used to perform the **hypothesis testing**:\

```{r}
L_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(L_ck.csr, . - r ~ r, xlab="d", ylab="L(d)-r")
```

### **11.c. Tampines planning area**

Computing L-fucntion estimate:

```{r}
L_tm = Lest(childcare_tm_ppp, correction = "Ripley")
plot(L_tm, . -r ~ r, 
     ylab= "L(d)-r", xlab = "d(m)", 
     xlim=c(0,1000))
```

### **11.d. Performing Complete Spatial Randomness Test**

To confirm the observed spatial patterns, a **hypothesis test** is conducted. The hypotheses are stated as follows:

-   **H₀**: *Childcare services in Tampines are randomly distributed.*

-   **H₁**: *Childcare services in Tampines are not randomly distributed.*

The **null hypothesis (H₀)** will be **rejected** if the **p-value \< α (0.001)**.

The **code chunk below** will be used to perform the **hypothesis testing**:\

```{r}
L_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(L_tm.csr, . - r ~ r, 
     xlab="d", ylab="L(d)-r", xlim=c(0,500))
```
