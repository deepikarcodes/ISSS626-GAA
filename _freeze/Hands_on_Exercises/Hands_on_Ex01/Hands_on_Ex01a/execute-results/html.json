{
  "hash": "f98d849f4deff88fa1ed05abec3e4903",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands on Exercise 1a- Geospatial Data Science with R\"\nauthor: \"Deepika Raja\"\ndate: \"August 29, 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n## **1. Getting Started**\n\n## **1.a. Learning Outcome**\n\n**Geospatial Data Science** is a process of [importing, wrangling, integrating, and processing]{.underline} geographically referenced data sets. In this hands-on exercise, you will learn how to perform geospatial data science tasks in R by using **sf** package.\n\n## Installing R Packages\n\nn this hands-on exercise, two R packages will be used. They are:\n\n-   **sf** for importing, managing, and processing geospatial data, and\n\n-   **tidyverse** for performing data science tasks such as importing, wrangling and visualising data.\n\nUse the code chunk below to load the necessary R packages into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse)\n```\n:::\n\n\n\n## **1.b Importing Geospatial Data**\n\n### 1.b.2. **Listings.csv from Aspatial folder**:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlistings <- read_csv(\"Data/Aspatial/listings.csv\")\n```\n:::\n\n\n\n### 1.b.3. **MP14_Subzone shapefile from Geospatial folder**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn=\"data/geospatial\",layer =\"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\deepikarcodes\\ISSS626-GAA\\Hands_on_Exercises\\Hands_on_Ex01\\Data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n\n### 1.b.4. **Cyclingpath shapefile from Geospatial folder**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncyclingpath <- st_read(dsn = \"data/geospatial\", layer = \"CyclingPathGazette\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `CyclingPathGazette' from data source \n  `C:\\deepikarcodes\\ISSS626-GAA\\Hands_on_Exercises\\Hands_on_Ex01\\Data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 4651 features and 19 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11721.1 ymin: 27550.13 xmax: 42809.37 ymax: 49702.59\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n\n### 1.b.5. **PreSchoolLocation kml from Geospatial folder**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool <- st_read(dsn = \"data/geospatial/PreSchoolsLocation.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\deepikarcodes\\ISSS626-GAA\\Hands_on_Exercises\\Hands_on_Ex01\\Data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n## 2 **Checking the Content of A Simple Feature Data Frame**\n\n### **2a. st_geometry() -**\n\nUse st_geometry() to extract and inspect the geometry column of the mpsz simple feature data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_geometry(mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n```\n\n\n:::\n:::\n\n\n\n### **2b. glimpse() -**\n\nUse glimpse() from the dplyr package to explore the attribute data (non-spatial columns)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 323\nColumns: 16\n$ OBJECTID   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO <int> 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  <chr> \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  <chr> \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     <chr> \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N <chr> \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C <chr> \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    <chr> \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D <date> 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     <dbl> 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     <dbl> 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng <dbl> 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area <dbl> 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   <MULTIPOLYGON [m]> MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n```\n\n\n:::\n:::\n\n\n\n### **2c. head() -**\n\nto inspect the first few records in full, including both attributes and geometry.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(mpsz,n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n```\n\n\n:::\n:::\n\n\n\n## **3. Plotting the Geospatial Data**\n\n### **3a. plot() -**\n\nThis gives a quick overview of how each attribute varies spatially.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mpsz)\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n### **3b. Plot only the geometry**\n\nfocus solely on the spatial layout without attribute overlays.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(mpsz))\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### **3c. Plot only the specific attribute -**\n\nplot the geometry colored by a specific attribute.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mpsz[\"PLN_AREA_N\"])\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### **3d. Overlaying Layers:**\n\nPreschool on Top of Subzones To overlay point features (e.g., preschools) on top of polygon features (e.g., subzones).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(mpsz))\nplot(st_geometry(preschool),add = TRUE)\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\nQuiz - Note that the preschool point objects failed to plot ontop of the mpsz layer. Do you know why?\n\n***Answer:** The preschool points didn’t appear on the map because they were in a different coordinate system from the mpsz layer. The mpsz data uses Singapore’s local SVY21 system (measured in meters), while the preschool data from the KML file uses a global geographic system (measured in degrees). Since R does not automatically align datasets with different coordinate systems, the preschool points were plotted far away from Singapore, making them invisible. The solution is to transform the preschool data so that it matches the coordinate system of the mpsz layer.*\n\n## **4. Working on Projection in R**\n\n### **4a. Checking the CRS -**\n\nThis shows the coordinate reference system (CRS) of the mpsz layer. If the EPSG code is incorrect (e.g., 9001), we need to fix it:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n```\n\n\n:::\n:::\n\n\n\n### **4b. Assigning the correct EPSG Code -**\n\nThis sets the CRS of mpsz to SVY21 / Singapore TM (EPSG:3414), which uses meters and is suitable for local mapping and confirm the same.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_set_crs(mpsz, 3414)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n\n\n:::\n:::\n\n\n\n### **4c. Transforming -**\n\nTransform preschool to match mpsz projections\\\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(preschool)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool <- st_transform(preschool, crs = 3414)\nst_crs(preschool)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n\n\n:::\n:::\n\n\n\n### **4d. Plot both layers together**\n\nThis overlays the preschool points on top of the mpsz map correctly, now that both use the same projection.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(mpsz))\nplot(st_geometry(preschool), add = TRUE)\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n## **5. Working on Aspatial**\n\n### **5a. Checking the structure of imported data -**\n\nThis displays the contents of the listings tibble with columns like latitude, longitude, price, room_type, etc. These coordinates are in decimal degrees, so we assume they use WGS 84 (EPSG:4326).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist(listings)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n# A tibble: 3,659 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    <dbl> <chr>       <dbl> <chr>     <chr>               <chr>            <dbl>\n 1  71609 Ensuite …  367042 Belinda   East Region         Tampines          1.35\n 2  71896 B&B  Roo…  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Room 2-n…  367042 Belinda   East Region         Tampines          1.35\n 4 275343 10min wa… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 15 mins … 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 294281 5 mins w… 1521514 Elizabeth Central Region      Newton            1.31\n 7 324945 Comforta… 1439258 Kay       Central Region      Bukit Merah       1.29\n 8 330095 Relaxing… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 344803 Budget s…  367042 Belinda   East Region         Tampines          1.35\n10 369141 5mins fr… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,649 more rows\n# ℹ 11 more variables: longitude <dbl>, room_type <chr>, price <dbl>,\n#   minimum_nights <dbl>, number_of_reviews <dbl>, last_review <date>,\n#   reviews_per_month <dbl>, calculated_host_listings_count <dbl>,\n#   availability_365 <dbl>, number_of_reviews_ltm <dbl>, license <chr>\n```\n\n\n:::\n:::\n\n\n\n### **5b. Convert the tibble into spatial data frame -**\n\n-   Using st_as_sf() turns the tibble into a simple feature (sf) object.\n\n-   coords = c(“longitude”, “latitude”) tells R which columns to use for spatial coordinates.\n\n-   crs = 4326 sets the initial CRS to WGS 84.\n\n-   %\\>% st_transform(crs = 3414) reprojects the data to SVY21 / Singapore TM, matching the mpsz layer.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlistings_sf=st_as_sf(listings, \n                         coords = c(\"longitude\", \"latitude\"), \n                         crs = 4326) %>%\n   st_transform(crs = 3414)\n```\n:::\n\n\n\n### **5c. Inspect the new spatial dataframe**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(listings_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,659\nColumns: 17\n$ id                             <dbl> 71609, 71896, 71903, 275343, 275344, 29…\n$ name                           <chr> \"Ensuite Room (Room 1 & 2) near EXPO\", …\n$ host_id                        <dbl> 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      <chr> \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            <chr> \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  <chr> \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      <chr> \"Private room\", \"Private room\", \"Privat…\n$ price                          <dbl> 143, NA, 76, NA, NA, 85, NA, NA, 41, 79…\n$ minimum_nights                 <dbl> 92, 92, 92, 180, 180, 92, 180, 180, 92,…\n$ number_of_reviews              <dbl> 19, 24, 46, 20, 16, 131, 17, 5, 60, 81,…\n$ last_review                    <date> 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              <dbl> 0.12, 0.14, 0.27, 0.13, 0.10, 0.80, 0.1…\n$ calculated_host_listings_count <dbl> 5, 5, 5, 58, 58, 7, 58, 58, 5, 7, 7, 1,…\n$ availability_365               <dbl> 90, 79, 90, 153, 153, 365, 153, 153, 36…\n$ number_of_reviews_ltm          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, …\n$ license                        <chr> NA, NA, NA, \"S0399\", \"S0399\", NA, \"S039…\n$ geometry                       <POINT [m]> POINT (41972.5 36390.05), POINT (…\n```\n\n\n:::\n:::\n\n\n\n### **5d. Plot both layers together - DIY**\n\nPlotting the airbnb listings on the top of mpsz layer. - plot(st_geometry(mpsz)) draws the base map of Singapore subzones. - plot(…, add = TRUE) overlays the Airbnb points. - col = “blue” and pch = 20 make the points visible and styled.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(mpsz))\nplot(st_geometry(listings_sf), add = TRUE, col = \"blue\", pch = 20)\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n## **6. Geoprocessing with sf Package**\n\n### **6a Land Acquisition Analysis**\n\n#### **6a.1. : Create a 5-meter buffer around cycling paths**\n\n-   st_buffer() creates a buffer zone around each line feature.\n\n-   dist = 5 means 5 meters on each side.\n\n-   nQuadSegs = 30 smooths the buffer edges for better visual quality.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuffer_cycling <- st_buffer(cyclingpath, dist = 5, nQuadSegs = 30)\n```\n:::\n\n\n\n#### **6a.2: Calculate the area of each buffer Base R**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuffer_cycling$AREA <- st_area(buffer_cycling)\n```\n:::\n\n\n\n#### **6a.3: Calculate total land area required**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(buffer_cycling$AREA)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n3561648 [m^2]\n```\n\n\n:::\n:::\n\n\n\n#### **6a.4: Focus on Tampines West subzone**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_selected <- mpsz %>%\n  filter(SUBZONE_N == \"TAMPINES WEST\")\n```\n:::\n\n\n\n-   filter() extracts only the polygon for Tampines West.\n\n#### **6a.5: Clip buffer to Tampines West using st_intersection()**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuffer_cycling <- st_transform(buffer_cycling, st_crs(mpsz_selected))\nmpsz_selected <- st_transform(mpsz_selected, st_crs(buffer_cycling))\nbuffer_cycling_selected <- st_intersection(buffer_cycling, mpsz_selected)\n```\n:::\n\n\n\n-   st_intersection() returns only the overlapping area between the buffer and the selected subzone.\n\n#### **6a.6: Plot the result**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(mpsz_selected), col = \"lightgrey\", main = \"Buffer Zone in Tampines West\")\nplot(st_geometry(buffer_cycling_selected), col = \"red\", add = TRUE)\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n-   This overlays the buffer zone on top of the selected subzone.\n\n### **6b. Count Pre-Schools by Subzone**\n\n#### **6b.1: Count pre-schools within each subzone**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz$`PreSch Count` <- lengths(st_intersects(mpsz, preschool))\n```\n:::\n\n\n\n-   st_intersects() checks which points fall inside each polygon.\n\n-   lengths() counts how many pre-schools intersect each subzone.\n\n#### **6b.2: View summary statistics**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mpsz$`PreSch Count`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n```\n\n\n:::\n:::\n\n\n\n-   This shows min, max, mean, and quartiles of pre-school counts.\n\n#### **6b.3: Find subzone with the most pre-schools**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_n(mpsz, 1, `PreSch Count`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n```\n\n\n:::\n:::\n\n\n\n-   top_n() returns the subzone with the highest count.\n\n#### **6b.4: Calculate area of each subzone**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz$Area <- st_area(mpsz)\n```\n:::\n\n\n\n-   Adds a new column Area with the size of each subzone in square meters.\n\n#### **6b.5: Compute pre-school density**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- mpsz %>%\n  mutate(`PreSch Density` = `PreSch Count` / Area * 1e6)\n```\n:::\n\n\n\n-   Converts count per square meter to count per square kilometer.\n\n#### **6b.6: Visualize Pre-School Density**\n\nA. Histogram using base R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(mpsz$`PreSch Density`)\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n\n-   Quick view of distribution, but limited styling.\n\nB. Histogram using ggplot2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(data = mpsz, aes(x = as.numeric(`PreSch Density`))) +\n  geom_histogram(bins = 20, color = \"black\", fill = \"light blue\") +\n  labs(\n    title = \"Are pre-schools evenly distributed in Singapore?\",\n    subtitle = \"Many subzones have only one pre-school, while seven have 30 or more.\",\n    x = \"Pre-school density (per km²)\",\n    y = \"Frequency\"\n  )\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n-   A polished histogram with custom labels and colors.\n\n#### **6b.7: Scatterplot of Density vs Count**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpsz, aes(x = as.numeric(`PreSch Density`), y = `PreSch Count`)) +\n  geom_point(color = \"black\", fill = \"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(\n    x = \"Pre-school density (per km²)\",\n    y = \"Pre-school count\"\n  )\n```\n\n::: {.cell-output-display}\n![](Hands_on_Ex01a_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n\n-   Shows the relationship between density and total count per subzone.\n",
    "supporting": [
      "Hands_on_Ex01a_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}